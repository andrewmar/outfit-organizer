// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230812162402_Initial MIgration")]
    partial class InitialMIgration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.ClothingItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<Guid?>("OutfitId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Season")
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("TimesWorn")
                        .HasColumnType("integer");

                    b.Property<Guid>("WardrobeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("OutfitId");

                    b.HasIndex("WardrobeId");

                    b.ToTable("ClothingItems");
                });

            modelBuilder.Entity("Domain.Outfit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<List<string>>("ColorSchemes")
                        .HasColumnType("text[]");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<List<string>>("Tags")
                        .HasColumnType("text[]");

                    b.Property<Guid?>("WardrobeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WardrobeId");

                    b.ToTable("Outfits");
                });

            modelBuilder.Entity("Domain.OutfitClothingItem", b =>
                {
                    b.Property<Guid>("OutfitId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ClothingItemId")
                        .HasColumnType("uuid");

                    b.HasKey("OutfitId", "ClothingItemId");

                    b.HasIndex("ClothingItemId");

                    b.ToTable("OutfitClothingItem");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Wardrobe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Wardrobes");
                });

            modelBuilder.Entity("Domain.ClothingItem", b =>
                {
                    b.HasOne("Domain.Outfit", null)
                        .WithMany("ClothingItems")
                        .HasForeignKey("OutfitId");

                    b.HasOne("Domain.Wardrobe", "Wardrobe")
                        .WithMany("ClothingItems")
                        .HasForeignKey("WardrobeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wardrobe");
                });

            modelBuilder.Entity("Domain.Outfit", b =>
                {
                    b.HasOne("Domain.Wardrobe", "Wardrobe")
                        .WithMany("Outfits")
                        .HasForeignKey("WardrobeId");

                    b.Navigation("Wardrobe");
                });

            modelBuilder.Entity("Domain.OutfitClothingItem", b =>
                {
                    b.HasOne("Domain.ClothingItem", "ClothingItem")
                        .WithMany("OutfitClothingItems")
                        .HasForeignKey("ClothingItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Outfit", "Outfit")
                        .WithMany("OutfitClothingItems")
                        .HasForeignKey("OutfitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClothingItem");

                    b.Navigation("Outfit");
                });

            modelBuilder.Entity("Domain.Wardrobe", b =>
                {
                    b.HasOne("Domain.User", "User")
                        .WithOne("Wardrobe")
                        .HasForeignKey("Domain.Wardrobe", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.ClothingItem", b =>
                {
                    b.Navigation("OutfitClothingItems");
                });

            modelBuilder.Entity("Domain.Outfit", b =>
                {
                    b.Navigation("ClothingItems");

                    b.Navigation("OutfitClothingItems");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Navigation("Wardrobe");
                });

            modelBuilder.Entity("Domain.Wardrobe", b =>
                {
                    b.Navigation("ClothingItems");

                    b.Navigation("Outfits");
                });
#pragma warning restore 612, 618
        }
    }
}
